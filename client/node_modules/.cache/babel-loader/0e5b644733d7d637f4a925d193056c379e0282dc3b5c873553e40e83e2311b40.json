{"ast":null,"code":"// pages/api/send-email.js\nimport sendgrid from '@sendgrid/mail';\nsendgrid.setApiKey(process.env.SENDGRID_API_KEY);\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') {\n    res.setHeader('Allow', 'POST');\n    return res.status(405).end('Method Not Allowed');\n  }\n  const {\n    name,\n    email,\n    message\n  } = req.body;\n  if (!name || !email || !message) {\n    return res.status(400).send('Missing fields');\n  }\n  try {\n    await sendgrid.send({\n      to: 'lamboferrari2025@gmail.com',\n      from: 'no-reply@yourdomain.com',\n      // ← must be a verified sender/domain\n      subject: `New message from ${name}`,\n      text: `${message}\\n\\n— ${name} <${email}>`,\n      html: `<p>${message.replace(/\\n/g, '<br/>')}</p><p>— <strong>${name}</strong> &lt;${email}&gt;</p>`\n    });\n    return res.status(200).json({\n      success: true\n    });\n  } catch (error) {\n    console.error('SendGrid error:', error);\n    return res.status(500).send('Error sending email');\n  }\n}","map":{"version":3,"names":["sendgrid","setApiKey","process","env","SENDGRID_API_KEY","handler","req","res","method","setHeader","status","end","name","email","message","body","send","to","from","subject","text","html","replace","json","success","error","console"],"sources":["/Users/prathampaliwal/Desktop/Code_GalaxyEDGE Safety Inc/client/src/pages/ReachOut.jsx"],"sourcesContent":["// pages/api/send-email.js\nimport sendgrid from '@sendgrid/mail';\n\nsendgrid.setApiKey(process.env.SENDGRID_API_KEY);\n\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') {\n    res.setHeader('Allow','POST');\n    return res.status(405).end('Method Not Allowed');\n  }\n\n  const { name, email, message } = req.body;\n  if (!name || !email || !message) {\n    return res.status(400).send('Missing fields');\n  }\n\n  try {\n    await sendgrid.send({\n      to: 'lamboferrari2025@gmail.com',\n      from: 'no-reply@yourdomain.com',   // ← must be a verified sender/domain\n      subject: `New message from ${name}`,\n      text: `${message}\\n\\n— ${name} <${email}>`,\n      html: `<p>${message.replace(/\\n/g,'<br/>')}</p><p>— <strong>${name}</strong> &lt;${email}&gt;</p>`\n    });\n    return res.status(200).json({ success: true });\n  } catch (error) {\n    console.error('SendGrid error:', error);\n    return res.status(500).send('Error sending email');\n  }\n}\n"],"mappings":"AAAA;AACA,OAAOA,QAAQ,MAAM,gBAAgB;AAErCA,QAAQ,CAACC,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC;AAEhD,eAAe,eAAeC,OAAOA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAC9C,IAAID,GAAG,CAACE,MAAM,KAAK,MAAM,EAAE;IACzBD,GAAG,CAACE,SAAS,CAAC,OAAO,EAAC,MAAM,CAAC;IAC7B,OAAOF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,oBAAoB,CAAC;EAClD;EAEA,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGR,GAAG,CAACS,IAAI;EACzC,IAAI,CAACH,IAAI,IAAI,CAACC,KAAK,IAAI,CAACC,OAAO,EAAE;IAC/B,OAAOP,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;EAC/C;EAEA,IAAI;IACF,MAAMhB,QAAQ,CAACgB,IAAI,CAAC;MAClBC,EAAE,EAAE,4BAA4B;MAChCC,IAAI,EAAE,yBAAyB;MAAI;MACnCC,OAAO,EAAE,oBAAoBP,IAAI,EAAE;MACnCQ,IAAI,EAAE,GAAGN,OAAO,SAASF,IAAI,KAAKC,KAAK,GAAG;MAC1CQ,IAAI,EAAE,MAAMP,OAAO,CAACQ,OAAO,CAAC,KAAK,EAAC,OAAO,CAAC,oBAAoBV,IAAI,iBAAiBC,KAAK;IAC1F,CAAC,CAAC;IACF,OAAON,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACa,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,OAAOlB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACM,IAAI,CAAC,qBAAqB,CAAC;EACpD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}